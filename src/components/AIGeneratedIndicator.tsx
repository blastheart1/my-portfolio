"use client";

import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

interface AIGeneratedIndicatorProps {
  message?: string;
  position?: "top-left" | "top-right" | "bottom-left" | "bottom-right";
  className?: string;
}

export default function AIGeneratedIndicator({ 
  message = "This answer is generated by AI beyond the FAQ dataset.",
  position = "top-right",
  className = ""
}: AIGeneratedIndicatorProps) {
  const [isHovered, setIsHovered] = useState(false);

  const positionClasses = {
    "top-left": "top-0 left-0",
    "top-right": "top-0 right-0",
    "bottom-left": "bottom-0 left-0",
    "bottom-right": "bottom-0 right-0"
  };

  const tooltipPositionClasses = {
    "top-left": "bottom-full left-0 mb-2",
    "top-right": "bottom-full right-0 mb-2",
    "bottom-left": "top-full left-0 mt-2",
    "bottom-right": "top-full right-0 mt-2"
  };

  return (
    <div className={`relative inline-block ${className}`}>
      {/* Green Dot Indicator */}
      <div
        className={`absolute ${positionClasses[position]} w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-800 shadow-sm cursor-pointer transition-all duration-200 hover:scale-110`}
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
      >
        {/* Subtle pulse animation */}
        <motion.div
          className="absolute inset-0 bg-green-400 rounded-full"
          animate={{
            scale: [1, 1.2, 1],
            opacity: [0.7, 0.3, 0.7],
          }}
          transition={{
            duration: 2,
            repeat: Infinity,
            ease: "easeInOut",
          }}
        />
      </div>

      {/* Hover Tooltip */}
      <AnimatePresence>
        {isHovered && (
          <motion.div
            initial={{ opacity: 0, scale: 0.8, y: position.includes("top") ? 10 : -10 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.8, y: position.includes("top") ? 10 : -10 }}
            transition={{ duration: 0.2, ease: "easeOut" }}
            className={`absolute ${tooltipPositionClasses[position]} z-50`}
          >
            <div className="bg-green-50 dark:bg-green-950/90 border border-green-200 dark:border-green-800 rounded-lg px-3 py-2 shadow-lg max-w-xs">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-green-500 rounded-full flex-shrink-0"></div>
                <p className="text-xs text-green-700 dark:text-green-300 font-medium leading-relaxed">
                  {message}
                </p>
              </div>
              {/* Tooltip arrow */}
              <div className={`absolute w-2 h-2 bg-green-50 dark:bg-green-950/90 border-r border-b border-green-200 dark:border-green-800 transform rotate-45 ${
                position.includes("top") 
                  ? "top-full left-1/2 -translate-x-1/2 -translate-y-1/2" 
                  : "bottom-full left-1/2 -translate-x-1/2 translate-y-1/2"
              }`} />
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}
